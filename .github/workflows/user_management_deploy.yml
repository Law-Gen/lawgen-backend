name: Build and Deploy User Service to ACA

on:
  push:
    branches:
      - user-service

env:
  ACR_NAME: 'lawgenacr'
  MICROSERVICE_NAME: 'user-service'
  RESOURCE_GROUP: 'Zekua'
  CONTAINER_APP_ENV: 'lawgen'
  TARGET_PORT: '8080'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Log in to Azure CLI
      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 4. Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # 5. Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./user_management
          file: ./user_management/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.MICROSERVICE_NAME }}:latest
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.MICROSERVICE_NAME }}:${{ github.sha }}
          build-args: |
            PORT=${{ env.TARGET_PORT }}
            ENV=${{ secrets.ENV }}

      # 6. Deploy to Azure Container App (FIXED)
      - name: Deploy to Azure Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.MICROSERVICE_NAME }}
          containerAppEnvironment: ${{ env.CONTAINER_APP_ENV }} # Corrected parameter name
          acrName: ${{ env.ACR_NAME }}
          imageToDeploy: ${{ env.ACR_NAME }}.azurecr.io/${{ env.MICROSERVICE_NAME }}:${{ github.sha }}
          targetPort: ${{ env.TARGET_PORT }}
          ingress: 'external'
            OAUTH_STATE_STRING=${{ secrets.OAUTH_STATE_STRING }}
            APP_URL=${{ secrets.URL }}
